{"version":3,"sources":["Header.js","MonsterMaker.js","Monsters.js","EditMonster.js","LogIn.js","LogOut.js","CreateUser.js","App.js","index.js"],"names":["Header","props","src","alt","isLoggedIn","className","to","MonsterMaker","state","topText","bottomText","randomHead","randomBody","randomLeg","allHeadImgs","allBodiesImgs","allLegsImgs","handleChange","bind","pullImg","saveMeme","fetch","then","response","json","heads","data","setState","bodies","legs","event","target","name","value","this","preventDefault","randHead","Math","floor","random","length","url","randBod","randLeg","axios","post","process","top_text","bottom_text","head_url","body_url","leg_url","headers","history","push","catch","error","console","log","status","onSubmit","type","placeholder","onChange","onClick","React","Component","Monsters","allMemes","localStorage","getItem","get","map","meme","i","pathname","id","EditMonster","memeInfo","deleteMeme","memeId","location","slice","patch","delete","LogIn","email","password","loginSubmit","defaults","common","jwt","setItem","setIsLoggedIn","class","LogOut","clear","CreateUser","passwordConfirmation","createUser","password_confirmation","App","useState","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.27356fdf.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./style.css\"\nimport { Link } from 'react-router-dom';\n\nfunction Header(props) {\n\n  return (\n    <header>\n      <img src=\"./QuestionMark.png\" alt=\"\" />\n      <p>Monster Mashup</p>\n      {props.isLoggedIn && (\n        <ul className=\"nav-list\">\n          <Link to=\"/monsters\">\n            <li>View Monsters</li>\n          </Link>\n          <Link to=\"/monstermashup\">\n            <li>Create New Monster</li>\n          </Link>\n          <Link to=\"/logout\">\n            <li>Log Out</li>\n          </Link>\n        </ul>\n      )}\n    </header>\n  )\n}\n\nexport default Header","import React from \"react\"\nimport \"./style.css\"\nimport axios from \"axios\"\n\nclass MonsterMaker extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n\n      randomHead: \"heads/professor yeti.png\",\n      randomBody: \"bodies/cats cradle.png\",\n      randomLeg: \"legs/elephant.png\",\n      allHeadImgs: [],\n      allBodiesImgs: [],\n      allLegsImgs: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.pullImg = this.pullImg.bind(this)\n    this.saveMeme = this.saveMeme.bind(this)\n  }\n\n  componentDidMount() {\n\n    fetch('get_heads.json')\n      .then(response => response.json())\n      .then(response => {\n        const { heads } = response.data\n        this.setState({\n          allHeadImgs: heads\n        })\n      })\n\n    fetch('get_bodies.json')\n      .then(response => response.json())\n      .then(response => {\n        const { bodies } = response.data\n        this.setState({\n          allBodiesImgs: bodies\n        })\n      })\n\n    fetch('get_legs.json')\n      .then(response => response.json())\n      .then(response => {\n        const { legs } = response.data\n        this.setState({\n          allLegsImgs: legs\n        })\n      })\n\n\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  pullImg(event) {\n    event.preventDefault()\n    const randHead = Math.floor(Math.random() * this.state.allHeadImgs.length)\n    this.setState({\n      randomHead: this.state.allHeadImgs[randHead].url\n    })\n    const randBod = Math.floor(Math.random() * this.state.allBodiesImgs.length)\n    this.setState({\n      randomBody: this.state.allBodiesImgs[randBod].url\n    })\n    const randLeg = Math.floor(Math.random() * this.state.allLegsImgs.length)\n    this.setState({\n      randomLeg: this.state.allLegsImgs[randLeg].url\n    })\n  }\n\n  saveMeme(event) {\n    event.preventDefault()\n    axios\n      .post(`${process.env.REACT_APP_APIURL}/api/monsters`, {\n        top_text: this.state.topText,\n        bottom_text: this.state.bottomText,\n        head_url: this.state.randomHead,\n        body_url: this.state.randomBody,\n        leg_url: this.state.randomLeg\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        this.props.history.push(\"/monsters\")\n      })\n      .catch(error => {\n        console.log(error)\n        if (error.response.status === 401) {\n          console.log(this.props.history)\n          this.props.history.push(\"/\")\n        }\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"meme-form\" onSubmit={this.pullImg}>\n          <input\n            type=\"text\"\n            name=\"topText\"\n            placeholder=\"First Name\"\n            value={this.state.topText}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"bottomText\"\n            placeholder=\"Last Name\"\n            value={this.state.bottomText}\n            onChange={this.handleChange}\n          />\n          <button>Gen</button>\n\n        </form>\n        <div className=\"meme\">\n          <img src={this.state.randomHead} alt=\"\" />\n          <img src={this.state.randomBody} alt=\"\" />\n          <img src={this.state.randomLeg} alt=\"\" />\n          <h2 className=\"top\">{this.state.topText}</h2>\n          <h2 className=\"bottom\">{this.state.bottomText}</h2>\n        </div>\n        <button onClick={this.saveMeme} className=\"meme-save\">Make the Monster</button>\n      </div>\n    )\n  }\n}\n\nexport default MonsterMaker","import React from 'react'\nimport \"./style.css\"\nimport axios from 'axios'\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\nclass Monsters extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      allMemes: [],\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.props)\n    const jwt = localStorage.getItem(\"jwt\")\n    axios.get(`${process.env.REACT_APP_APIURL}/api/monsters`)\n      .then(response => {\n        this.setState({\n          allMemes: response.data\n        })\n      })\n      .catch((error) => {\n        console.log(error.response);\n        if (error.response.status === 401) {\n          console.log(this.props.history)\n          this.props.history.push(\"/\")\n        }\n      })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.allMemes.map((meme, i) => <li className=\"index\" key={meme.id}>\n            <div className=\"meme\">\n              <br></br>\n              <img src={meme.head_url} alt=\"\" />\n              <img src={meme.body_url} alt=\"\" />\n              <img src={meme.leg_url} alt=\"\" />\n              <h2 className=\"memes-top\">{meme.top_text}</h2>\n              <h2 className=\"memes-bottom\">{meme.bottom_text}</h2>\n              <br></br>\n              <Link\n                className=\"meme-link\"\n                to={{\n                  pathname: `/editmonster/${meme.id}`,\n                }}\n              >\n                Edit Monster Name\n              </Link>\n              <br></br>\n              <hr></hr>\n            </div>\n          </li>)}\n        </div>\n        <p>{this.state.allMemes.top_text}</p>\n      </div >\n    )\n  }\n}\n\nexport default Monsters","import React from 'react'\nimport \"./style.css\"\nimport axios from 'axios'\n\nclass EditMonster extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      memeInfo: [],\n      topText: \"\",\n      bottomText: \"\",\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.saveMeme = this.saveMeme.bind(this)\n    this.deleteMeme = this.deleteMeme.bind(this)\n  }\n\n  componentDidMount() {\n    const memeUrl = this.props.location.pathname\n    const memeId = memeUrl.slice(13)\n    axios.get(`${process.env.REACT_APP_APIURL}/api/monsters/${memeId}`)\n      .then(response => {\n        this.setState({\n          memeInfo: response.data\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  saveMeme(event) {\n    event.preventDefault()\n    const memeUrl = this.props.location.pathname\n    const memeId = memeUrl.slice(13)\n    axios\n      .patch(`${process.env.REACT_APP_APIURL}/api/monsters/${memeId}`, {\n        top_text: this.state.topText,\n        bottom_text: this.state.bottomText,\n        head_url: this.state.memeInfo.head_url,\n        body_url: this.state.memeInfo.body_url,\n        leg_url: this.state.memeInfo.leg_url\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        this.props.history.push(\"/monsters\")\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  deleteMeme(event) {\n    event.preventDefault()\n    const memeUrl = this.props.location.pathname\n    const memeId = memeUrl.slice(13)\n    axios\n      .delete(`${process.env.REACT_APP_APIURL}/api/monsters/${memeId}`)\n      .then(response => {\n        this.props.history.push(\"/monsters\")\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"meme-form\" onSubmit={this.saveMeme}>\n          <input\n            type=\"text\"\n            name=\"topText\"\n            placeholder={this.state.memeInfo.top_text}\n            value={this.state.topText}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"bottomText\"\n            placeholder={this.state.memeInfo.bottom_text}\n            value={this.state.bottomText}\n            onChange={this.handleChange}\n          />\n          <button>Update</button>\n\n        </form>\n        <div className=\"meme\">\n          <img src={this.state.memeInfo.head_url} alt=\"\" />\n          <img src={this.state.memeInfo.body_url} alt=\"\" />\n          <img src={this.state.memeInfo.leg_url} alt=\"\" />\n          <h2 className=\"top\">{this.state.topText ? this.state.topText : this.state.memeInfo.top_text}</h2>\n          <h2 className=\"bottom\">{this.state.bottomText ? this.state.bottomText : this.state.memeInfo.bottom_text}</h2>\n        </div>\n\n        <button className=\"meme-save\" onClick={this.deleteMeme}>Delete Monster</button>\n      </div >\n    )\n  }\n}\n\nexport default EditMonster","import React from 'react'\nimport \"./style.css\"\nimport axios from 'axios'\nimport { BrowserRouter as Route, Link } from \"react-router-dom\"\n\n\nclass LogIn extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      email: \"\",\n      password: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.loginSubmit = this.loginSubmit.bind(this)\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  loginSubmit(event) {\n    event.preventDefault()\n    axios\n      .post(`${process.env.REACT_APP_APIURL}/api/sessions`, {\n        email: this.state.email,\n        password: this.state.password,\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        axios.defaults.headers.common[\"Authorization\"] =\n          \"Bearer \" + response.data.jwt;\n        localStorage.setItem(\"jwt\", response.data.jwt);\n        this.props.setIsLoggedIn(true)\n        this.props.history.push(\"/monsters\")\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"login\">\n          <form className=\"login-form\" onSubmit={this.loginSubmit}>\n            <h1>Login</h1>\n            <ul>\n              {/* <li class=\"text-danger\">...</li> */}\n            </ul>\n            <div className=\"form-group\">\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Your Email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div class=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Your password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </div>\n            <br></br>\n            <input\n              type=\"submit\" className=\"btn-primary\" value=\"Submit\"\n            />\n          </form>\n          <br></br>\n          <Link className=\"meme-link\" to=\"/createaccount\">Create Account</Link>\n        </div>\n      </div >\n\n    )\n  }\n}\n\nexport default LogIn","import React from 'react'\nimport \"./style.css\"\nimport axios from 'axios'\n\nclass LogOut extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n    axios.defaults.headers.common[\"Authorization\"] = null\n    this.props.setIsLoggedIn(false)\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Logging Out</p>\n      </div >\n\n    )\n  }\n}\n\nexport default LogOut","import React from 'react'\nimport \"./style.css\"\nimport axios from 'axios'\n\nclass CreateUser extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      email: \"\",\n      name: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.createUser = this.createUser.bind(this)\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  createUser(event) {\n    event.preventDefault()\n    axios\n      .post(`${process.env.REACT_APP_APIURL}/api/users`, {\n        email: this.state.email,\n        name: this.state.name,\n        password: this.state.password,\n        password_confirmation: this.state.passwordConfirmation,\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        this.props.history.push(\"/\")\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"login\">\n          <form className=\"login-form\" onSubmit={this.createUser}>\n            <h1>Create Account</h1>\n\n            <div className=\"form-group\">\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Your Email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Name:</label>\n              <input\n                type=\"name\"\n                name=\"name\"\n                placeholder=\"Your Name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Your password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Confirm Password:</label>\n              <input\n                type=\"password\"\n                name=\"passwordConfirmation\"\n                placeholder=\"Re-enter password\"\n                value={this.state.passwordConfirmation}\n                onChange={this.handleChange}\n              />\n            </div>\n            <br></br>\n            <input\n              type=\"submit\" className=\"btn-primary\" value=\"Submit\"\n            />\n          </form>\n        </div>\n      </div >\n\n    )\n  }\n}\n\nexport default CreateUser","import React from \"react\"\nimport Header from \"./Header\"\nimport MonsterMaker from \"./MonsterMaker\"\nimport Monsters from \"./Monsters\"\nimport EditMonster from \"./EditMonster\"\nimport LogIn from \"./LogIn\"\nimport LogOut from \"./LogOut\"\nimport CreateUser from \"./CreateUser\"\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false)\n  return (\n    <Router>\n      <div>\n        <Header isLoggedIn = {isLoggedIn} />\n        <Switch>\n          <Route path=\"/monstermashup\" component={MonsterMaker} />\n          <Route path=\"/monsters\" render={(props) => <Monsters setIsLoggedIn = {setIsLoggedIn} {...props} />}/>\n          <Route path=\"/editmonster\" component={EditMonster} />\n          <Route path=\"/createaccount\" component={CreateUser} />\n          <Route path=\"/logout\" render={(props) => <LogOut setIsLoggedIn = {setIsLoggedIn} {...props} />}  />\n          <Route path=\"/\" render={(props) => <LogIn setIsLoggedIn = {setIsLoggedIn} {...props} />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\nvar jwt = localStorage.getItem(\"jwt\");\nif (jwt) {\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + jwt;\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}